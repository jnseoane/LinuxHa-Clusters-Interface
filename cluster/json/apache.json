['/tmp/extract_ocf_info.py']
{
  "name": "apache",
  "resource": "ocf:heartbeat:apache",
  "title": "Manages an Apache Web server instance",
  "description": "This is the resource agent for the Apache Web server. This resource agent operates both version 1.x and version 2.x Apache servers.  The start operation ends with a loop in which monitor is repeatedly called to make sure that the server started and that it is operational. Hence, if the monitor operation does not succeed within the start operation timeout, the apache resource will end with an error status.  The monitor operation by default loads the server status page which depends on the mod_status module and the corresponding configuration file (usually /etc/apache2/mod_status.conf). Make sure that the server status page works and that the access is allowed *only* from localhost (address 127.0.0.1). See the statusurl and testregex attributes for more details.  See also http://httpd.apache.org/",
  "params": [
    {
      "name": "configfile",
      "title": "configuration file path",
      "descripion": "The full pathname of the Apache configuration file. This file is parsed to provide defaults for various other resource agent parameters.",
      "required": false,
      "unique": true,
      "content_type": "string",
      "default_value": "/etc/apache2/apache2.conf"
    },
    {
      "name": "httpd",
      "title": "httpd binary path",
      "descripion": "The full pathname of the httpd binary (optional).",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": "/usr/sbin/httpd"
    },
    {
      "name": "port",
      "title": "httpd port",
      "descripion": "A port number that we can probe for status information using the statusurl. This will default to the port number found in the configuration file, or 80, if none can be found in the configuration file.",
      "required": false,
      "unique": false,
      "content_type": "integer",
      "default_value": null
    },
    {
      "name": "statusurl",
      "title": "url name",
      "descripion": "The URL to monitor (the apache server status page by default). If left unspecified, it will be inferred from the apache configuration file.  If you set this, make sure that it succeeds *only* from the localhost (127.0.0.1). Otherwise, it may happen that the cluster complains about the resource being active on multiple nodes.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "testregex",
      "title": "monitor regular expression",
      "descripion": "Regular expression to match in the output of statusurl. Case insensitive.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": "exists, but impossible to show in a human readable format (try grep testregex)"
    },
    {
      "name": "client",
      "title": "http client",
      "descripion": "Client to use to query to Apache. If not specified, the RA will try to find one on the system. Currently, wget and curl are supported. For example, you can set this parameter to \"curl\" if you prefer that to wget.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": ""
    },
    {
      "name": "testurl",
      "title": "test url",
      "descripion": "URL to test. If it does not start with \"http\", then it's considered to be relative to the Listen address.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "testregex10",
      "title": "extended monitor regular expression",
      "descripion": "Regular expression to match in the output of testurl. Case insensitive.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "testconffile",
      "title": "test configuration file",
      "descripion": "A file which contains test configuration. Could be useful if you have to check more than one web application or in case sensitive info should be passed as arguments (passwords). Furthermore, using a config file is the only way to specify certain parameters.  Please see README.webapps for examples and file description.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "testname",
      "title": "test name",
      "descripion": "Name of the test within the test configuration file.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "options",
      "title": "command line options",
      "descripion": "Extra options to apply when starting apache. See man httpd(8).",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": null
    },
    {
      "name": "envfiles",
      "title": "environment settings files",
      "descripion": "Files (one or more) which contain extra environment variables. If you want to prevent script from reading the default file, set this parameter to empty string.",
      "required": false,
      "unique": false,
      "content_type": "string",
      "default_value": "/etc/apache2/envvars"
    },
    {
      "name": "use_ipv6",
      "title": "use ipv6 with http clients",
      "descripion": "We will try to detect if the URL (for monitor) is IPv6, but if that doesn't work set this to true to enforce IPv6.",
      "required": false,
      "unique": false,
      "content_type": "boolean",
      "default_value": "false"
    }
  ],
  "actions": [
    "start",
    "stop",
    "status",
    "monitor",
    "meta-data",
    "validate-all"
  ]
}
